require_relative '../../../search_test'
require_relative '../../../generator/group_metadata'

module DaVinciPlanNetTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include DaVinciPlanNetTestKit::SearchTest

      title 'Server capable of forward chaining with <%= "#{chain_param_base}.#{chain_param}" %>'
      description %(
        A server SHALL be capable of supporting chaining for <%= chain_param %> through the search parameter <%= chain_param_base %>
        for the <%= profile_identifier.capitalize %> profile.

        This test will perform a search with <%= "#{chain_param_base}.#{chain_param}" %> using a value
        in the <%= "#{chain_param}" %> element on an instance found during _include tests executed
        previously during this sequence. To validate the returned instances, the test will perform a search 
        on the <%= "#{chained_resource}" %> resource type using the same <%= "#{chain_param}" %> search 
        parameter and value and check that this search contains any instances referenced through the 
        <%= "#{chain_param_base}" %> element of instances returned by the tested search.
      )

      id :<%= test_id %>

      verifies_requirements 'hl7.fhir.us.davinci-pdex-plan-net_1.1.0@21'

      def properties
        @properties ||= SearchTestProperties.new(
  <%= search_test_properties_string %>
        )
      end

      def self.metadata
        @metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, 'metadata.yml')))
      end

      def self.additional_metadata
        @additional_metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, '..', '<%= chained_resource.underscore.gsub('organization_affiliation', 'org_affil') %>', 'metadata.yml'), aliases: true))
      end

      def scratch_resources
        scratch[:<%= profile_identifier %>_resources] ||= {}
      end

      def scratch_additional_resources
        scratch[:<%= chained_resource.underscore %>_resources] ||= {}
      end

      run do
        run_forward_chain_search_test
      end
    end
  end
end