require_relative '../../../search_test'
require_relative '../../../generator/group_metadata'

module DaVinciPlanNetTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include DaVinciPlanNetTestKit::SearchTest

      title 'Server capable of combination search, e.g. being able to <%= test_goal %>'
      description %(
        A server SHALL support searching with a combination of parameters.  <%= test_description %>
      )
      
      id :<%= test_id %>

      def properties
        @properties ||= SearchTestProperties.new(
  <%= search_test_properties_string %>
        )
      end

      <% if optional_input? %>
      input :<%= input_name %>,
        title: 'Combination Search Reverse Chain',
        description: '<%= input_description %>',
        optional: true
      <% end %>
      def self.metadata
        @metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, 'metadata.yml')))
      end

      def self.additional_metadata
        @additional_metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, '..', '<%= additional_resource_type.underscore.gsub('organization_affiliation', 'org_affil') %>', 'metadata.yml'), aliases: true))
      end

      def scratch_resources
        scratch[:<%= profile_identifier %>_resources] ||= {}
      end

      def scratch_additional_resources
        scratch[:<%= additional_resource_type.underscore %>_resources] ||= {}
      end

      run do
        run_combination_search_test
      end
    end
  end
end
